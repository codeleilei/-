这是线性表的测试程序文件夹
此文档是代码的说明
线性表的基本操作：
	1）初始化 
	2）销毁
	3）按值查找
	4）按位查找
	5）插入操作
	6）删除操作
编程思想（以顺序表为例）：
1、顺序表：
	将顺序表作为一个对象 构造struct结构体（面向对象思想的顺序表）
	结构体中包含这个顺序表的name length maxsize 和 最重要的 顺序表list（这个顺序表就是真正要操作的顺序表）
	顺序表list 有两种构造方式：	
		1）动态分配：先定义指针 然后再去malloc
		2）静态分配：在定义的时候就指定了大小
	（注意点：编程的时候那些序号什么的都统一为顺序表的序号方式（就是从1开始计数），但是在具体操作数组的时候要注意c数组是从0开始计数的）
	
2、链表：
	数据结构：
		同样使用了面向对象的思想 先将链表封装成一个class 包含姓名长度+链表
		链表： struct里边一个data  一个next指针
	操作总结：
		1）初始化有两种方式： 头插法和尾插法两种
		2）查找中 按位查找有复用性 在删除和插入的时候可以直接使用
	总结:
		对于链表 最重要的是找到当事结点（比如需要插入位置的前一个结点 和删除结点的前一个结点）的前一个结点 （这个可以用按位查找来找到）
		只要找到了前一个结点 就都好办了 接下来就是指针的赋值就好了一般是当事结点先拿 前结点的next 指针 然后前结点的next指向当事（或删除）
		（按位查找返回的list_node *  的类型）
	
	
文件说明：	
	01为顺序表的测试代码  
	02为链表的测试

	